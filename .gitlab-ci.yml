stages:
  - build
  - push
  - deploy

variables:
  DOCKER_DRIVER: overlay2

default:
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin

build_image:
  stage: build
  script:
    - docker build -t $DOCKERHUB_USERNAME/crypto-price-predictor:latest .
  artifacts:
    name: "docker-image"
    paths:
      - image.tar
    expire_in: 15 minutes
  after_script:
    - docker save $DOCKERHUB_USERNAME/crypto-price-predictor:latest -o image.tar

push_image:
  stage: push
  needs:
    - build_image
  script:
    - docker load -i image.tar
    - docker push $DOCKERHUB_USERNAME/crypto-price-predictor:latest

deploy_to_ec2:
  stage: deploy
  image: ubuntu:20.04
  before_script:
    - apt-get update && apt-get install -y openssh-client coreutils
    - mkdir -p ~/.ssh
    # Decode the base64-encoded SSH key and save it as the private key
    - echo "$SSH_PRIVATE_KEY_B64" | base64 -d > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh-keyscan $EC2_IP >> ~/.ssh/known_hosts
  script:
    - |
      ssh -i ~/.ssh/id_rsa ubuntu@$EC2_IP '
        echo "Checking for any container binding to port 80...";
        existing=$(docker ps -q --filter "publish=80");
        if [ -n "$existing" ]; then
          echo "Found container(s) using port 80: $existing";
          docker rm -f $existing;
        else
          echo "No container found using port 80.";
        fi;
        echo "Pulling latest image...";
        docker pull pes1ug19cs098/crypto-price-predictor:latest;
        echo "Starting new container...";
        docker run -d -p 80:8000 pes1ug19cs098/crypto-price-predictor:latest
      '


